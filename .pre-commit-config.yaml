# Pre-commit configuration for Talk++ AI Middleware Platform
# =========================================================
# See https://pre-commit.com for more information

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--multi]
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: check-added-large-files
        args: [--maxkb=1024]
      - id: forbid-new-submodules

  # Security checks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package-lock.json

  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.0
    hooks:
      - id: gitleaks

  # Rust formatting and linting
  - repo: local
    hooks:
      - id: cargo-fmt
        name: cargo fmt
        entry: cargo fmt --all --
        language: system
        types: [rust]
        pass_filenames: false

      - id: cargo-clippy
        name: cargo clippy
        entry: cargo clippy --all-targets --all-features -- -D warnings
        language: system
        types: [rust]
        pass_filenames: false

      - id: cargo-check
        name: cargo check
        entry: cargo check --all
        language: system
        types: [rust]
        pass_filenames: false

      - id: cargo-test
        name: cargo test
        entry: cargo test --all
        language: system
        types: [rust]
        pass_filenames: false
        stages: [manual]

  # JavaScript/TypeScript/Node.js
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        files: \.(js|ts|jsx|tsx)$
        additional_dependencies:
          - eslint@8.56.0
          - "@typescript-eslint/eslint-plugin@6.15.0"
          - "@typescript-eslint/parser@6.15.0"

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: \.(js|ts|jsx|tsx|json|css|scss|md|yaml|yml)$
        exclude: package-lock.json

  # JSON validation and formatting
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.27.3
    hooks:
      - id: check-github-workflows
      - id: check-github-actions
      - id: check-dependabot

  # Docker/Container checks
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # YAML validation and formatting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yaml]

  # Terraform (if present)
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.86.0
    hooks:
      - id: terraform_fmt
      - id: terraform_validate
      - id: terraform_tflint
        args:
          - --args=--only=terraform_deprecated_interpolation
          - --args=--only=terraform_deprecated_index
          - --args=--only=terraform_unused_declarations
          - --args=--only=terraform_comment_syntax
          - --args=--only=terraform_documented_outputs
          - --args=--only=terraform_documented_variables
          - --args=--only=terraform_typed_variables
          - --args=--only=terraform_module_pinned_source
          - --args=--only=terraform_naming_convention
          - --args=--only=terraform_required_version
          - --args=--only=terraform_required_providers
          - --args=--only=terraform_standard_module_structure
      - id: terraform_checkov
        args:
          - --args=--framework terraform
          - --args=--skip-check CKV2_DOCKER_1

  # Kubernetes manifest validation
  - repo: https://github.com/syntaqx/kube-score
    rev: v1.16.1
    hooks:
      - id: kube-score
        files: k8s/.*\.(yaml|yml)$
        args: [--output-format, json]

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        args: [-e, SC1091, -e, SC2034]

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: [--fix]

  # License header checks
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.4
    hooks:
      - id: insert-license
        files: \.(rs|js|ts|jsx|tsx)$
        args:
          - --license-filepath
          - .license-header.txt
          - --use-current-year
          - --no-extra-eol

  # Dependency vulnerability scanning
  - repo: local
    hooks:
      - id: cargo-audit
        name: cargo audit
        entry: cargo audit
        language: system
        types: [rust]
        pass_filenames: false

      - id: npm-audit
        name: npm audit
        entry: bash -c 'find . -name package.json -not -path "*/node_modules/*" | while read f; do cd $(dirname $f) && npm audit --audit-level=high && cd - > /dev/null; done'
        language: system
        types: [json]
        files: package\.json$
        pass_filenames: false

  # Custom security checks
  - repo: local
    hooks:
      - id: no-hardcoded-secrets
        name: Check for hardcoded secrets
        entry: bash -c 'if grep -r "sk-[a-zA-Z0-9]" --include="*.rs" --include="*.js" --include="*.ts" --include="*.yaml" --include="*.yml" --include="*.json" --exclude-dir=node_modules --exclude-dir=target .; then echo "Potential API keys found!"; exit 1; fi'
        language: system
        pass_filenames: false

      - id: no-debug-prints
        name: Check for debug print statements
        entry: bash -c 'if grep -r "println!\|console\.log\|debugger;" --include="*.rs" --include="*.js" --include="*.ts" --exclude-dir=node_modules --exclude-dir=target .; then echo "Debug statements found!"; exit 1; fi'
        language: system
        pass_filenames: false
        stages: [manual]

# Global configuration
default_language_version:
  node: "20.10.0"
  python: python3.11

# Fail fast - stop after first failure
fail_fast: false

# Default stages for hooks
default_stages: [commit, merge-commit]

# Minimum pre-commit version
minimum_pre_commit_version: "3.0.0" 