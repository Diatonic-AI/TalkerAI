---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: talk-plus-plus
  labels:
    app: talk-plus-plus
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/agent-inject-status: "update"

---
apiVersion: v1
kind: Secret
metadata:
  name: talk-plus-plus-token
  annotations:
    kubernetes.io/service-account.name: talk-plus-plus
type: kubernetes.io/service-account-token

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: talk-plus-plus-vault-auth
rules:
  - apiGroups: [""]
    resources: ["serviceaccounts/token"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: talk-plus-plus-vault-auth
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: talk-plus-plus-vault-auth
subjects:
  - kind: ServiceAccount
    name: talk-plus-plus
    namespace: talk-plus-plus

---
# Vault Agent configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-agent-config
data:
  vault-agent.hcl: |
    pid_file = "/tmp/pidfile"
    
    vault {
      address = "https://vault.talk-plus-plus.com:8200"
      retry {
        num_retries = 5
      }
    }
    
    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "talk-plus-plus"
        }
      }
      
      sink "file" {
        config = {
          path = "/vault/secrets/.vault-token"
        }
      }
    }
    
    cache {
      use_auto_auth_token = true
    }
    
    listener "unix" {
      address = "/vault/secrets/agent.sock"
      tls_disable = true
    }
    
    template {
      source      = "/vault/templates/database.tpl"
      destination = "/vault/secrets/database"
      perms       = 0600
      command     = "pkill -HUP talk-plus-plus"
    }
    
    template {
      source      = "/vault/templates/redis.tpl"
      destination = "/vault/secrets/redis"
      perms       = 0600
      command     = "pkill -HUP talk-plus-plus"
    }
    
    template {
      source      = "/vault/templates/ai-keys.tpl"
      destination = "/vault/secrets/ai-keys"
      perms       = 0600
      command     = "pkill -HUP talk-plus-plus"
    }

---
# Vault Agent sidecar configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-agent-templates
data:
  database.tpl: |
    {{- with secret "secret/data/database/config" -}}
    DATABASE_URL="{{ .Data.data.url }}"
    DATABASE_MAX_CONNECTIONS="{{ .Data.data.max_connections }}"
    DATABASE_POOL_TIMEOUT="{{ .Data.data.pool_timeout }}"
    {{- end }}
  
  redis.tpl: |
    {{- with secret "secret/data/redis/config" -}}
    REDIS_URL="{{ .Data.data.url }}"
    REDIS_MAX_CONNECTIONS="{{ .Data.data.max_connections }}"
    REDIS_TIMEOUT="{{ .Data.data.timeout }}"
    {{- end }}
  
  ai-keys.tpl: |
    {{- with secret "secret/data/ai/api-keys" -}}
    ANTHROPIC_API_KEY="{{ .Data.data.anthropic }}"
    OPENAI_API_KEY="{{ .Data.data.openai }}"
    GROK_API_KEY="{{ .Data.data.grok }}"
    MONDAY_API_TOKEN="{{ .Data.data.monday }}"
    {{- end }} 